# MirrorMaker 2 Configuration for Multi-Cluster Wildfire Platform
# Enables geo-replication between NorCal and SoCal Kafka clusters

# Cluster definitions
clusters = norcal, socal, central

# NorCal Cluster (Primary - Bay Area/Sacramento)
norcal.bootstrap.servers = kafka-norcal:29092
norcal.security.protocol = PLAINTEXT
norcal.producer.compression.type = zstd
norcal.producer.batch.size = 32768
norcal.producer.linger.ms = 10

# SoCal Cluster (Secondary - Los Angeles/San Diego)
socal.bootstrap.servers = kafka-socal:29092
socal.security.protocol = PLAINTEXT
socal.producer.compression.type = zstd
socal.producer.batch.size = 32768
socal.producer.linger.ms = 10

# Central Cluster (Disaster Recovery - Fresno)
central.bootstrap.servers = kafka-central:29092
central.security.protocol = PLAINTEXT
central.producer.compression.type = zstd
central.producer.batch.size = 32768
central.producer.linger.ms = 10

# Replication flows
norcal->socal.enabled = true
norcal->central.enabled = true
socal->norcal.enabled = true
socal->central.enabled = true

# Topic configuration for NorCal -> SoCal
norcal->socal.topics = wildfire-.*
norcal->socal.topics.exclude = .*-internal, .*-test, __.*
norcal->socal.groups = wildfire-.*
norcal->socal.emit.checkpoints.interval.seconds = 60
norcal->socal.sync.topic.configs.enabled = true
norcal->socal.sync.topic.acls.enabled = false

# Topic configuration for SoCal -> NorCal
socal->norcal.topics = wildfire-.*
socal->norcal.topics.exclude = .*-internal, .*-test, __.*
socal->norcal.groups = wildfire-.*
socal->norcal.emit.checkpoints.interval.seconds = 60
socal->norcal.sync.topic.configs.enabled = true

# Topic configuration for disaster recovery
norcal->central.topics = wildfire-critical-.*, wildfire-alerts-.*
norcal->central.emit.checkpoints.interval.seconds = 30
socal->central.topics = wildfire-critical-.*, wildfire-alerts-.*
socal->central.emit.checkpoints.interval.seconds = 30

# Replication policies
replication.factor = 2
checkpoints.topic.replication.factor = 2
heartbeats.topic.replication.factor = 2
offset-syncs.topic.replication.factor = 2

# Consumer configuration
consumer.group.id = mm2-consumer-group
consumer.auto.offset.reset = earliest
consumer.fetch.min.bytes = 1024
consumer.max.poll.records = 500

# Producer configuration
producer.acks = all
producer.retries = 3
producer.max.in.flight.requests.per.connection = 5
producer.enable.idempotence = true

# Performance tuning
tasks.max = 8
offset.flush.interval.ms = 60000
offset.flush.timeout.ms = 5000

# Monitoring
metric.reporters = org.apache.kafka.common.metrics.JmxReporter
jmx.port = 9999

# Error handling
errors.retry.timeout = 60000
errors.retry.delay.max.ms = 10000
errors.tolerance = all
errors.deadletterqueue.topic.name = wildfire-mirrormaker-dlq
errors.deadletterqueue.topic.replication.factor = 2

# Topic renaming (maintain consistency across clusters)
replication.policy.class = org.apache.kafka.connect.mirror.IdentityReplicationPolicy

# Offset translation
offset.sync.interval.seconds = 60
emit.checkpoints.enabled = true
emit.checkpoints.interval.seconds = 60

# Heartbeat for connectivity monitoring
heartbeats.topic.retention.ms = 86400000
emit.heartbeats.enabled = true
emit.heartbeats.interval.seconds = 5

# ACL sync (disabled for now)
sync.topic.acls.enabled = false

# Topic config sync
sync.topic.configs.enabled = true
sync.topic.configs.interval.seconds = 60

# Consumer group offset sync
sync.group.offsets.enabled = true
sync.group.offsets.interval.seconds = 60
refresh.groups.enabled = true
refresh.groups.interval.seconds = 60

# Wildfire-specific topic priorities
# Critical fire detections get higher priority
norcal->socal.wildfire-critical-detections.producer.max.in.flight.requests.per.connection = 1
norcal->socal.wildfire-critical-detections.producer.batch.size = 1
norcal->socal.wildfire-critical-detections.producer.linger.ms = 0

socal->norcal.wildfire-critical-detections.producer.max.in.flight.requests.per.connection = 1
socal->norcal.wildfire-critical-detections.producer.batch.size = 1
socal->norcal.wildfire-critical-detections.producer.linger.ms = 0